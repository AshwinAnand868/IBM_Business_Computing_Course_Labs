      //***********************************************************************
      //* THIS PROGRAM USES A CURSOR TO LOAD A TEMPORARY RESULT TABLE FROM 3
      //* SEPARATE TABLES, CUSTOMER2, ORDER1 AND ORDERLINE. A NUMBER IS PASSED
      //* TO THE PROGRAM TO DETERMINE WHICH RECORDS ARE INLCUDED
      //***********************************************************************
           DCL-F CUSTREPORT PRINTER OFLIND(*IN01) ;
           DCL-S OrderNumH    PACKED(5:0);
      // Declare an indicator to handle end of result set (file)
           DCL-S EndOfFile IND;

      // All Host Variables available under a single name
           DCL-DS OrdersRecord;
             CUSTNAME CHAR(31);
             ORDERNUM PACKED(5:0);
             ORDERDATE DATE;
             PARTNUM CHAR(4);
             QUANTITY PACKED(3:0);
             QTPRICE PACKED(6:2);
             EXTPRICE PACKED(7:2);
           END-DS;

       // LimitIn is passed to the program
           DCL-PI MAIN EXTPGM('ORDERSSQL');
               LIMITIN PACKED(15:5);
           END-PI;

       // M A I N    R O U T I N E

                SpendLimit = LimitIn;
                EXSR PrepareFiles;
                Write ReporTitle;
                Write ColHeading;
                EXSR GetRow;
                Write NextCust;
                OrderNumH = OrderNum;
                DOW NOT EndOfFile;
                    IF *IN01 = *ON;
                        Write ReporTitle;
                        Write ColHeading;
                       *IN01 = *OFF;
                    ENDIF;
                    // Handle Control Breaks on Order Number

                    IF ORDERNUMH = ORDERNUM;
                      WRITE ORDDETAIL;
                    ELSE;

                      ORDERNUMH = ORDERNUM;
                      WRITE ORDTOTAL;
                      TOTALALL += TOTALORD;
                      TOTALORD = 0;
                      WRITE NEXTCUST;
                      WRITE ORDDETAIL;
                    ENDIF;

                    TOTALORD += EXTPRICE;
                    EXSR GETROW;

                ENDDO;

                Write OrdTotal;
                TotalAll +=TotalOrd;
                Write AllOrders;
                EXSR   WRAPUP;
                Write NotInclude;
                *INLR = *ON;
                RETURN;
        //**********************************************************************
        // O P E N F I L E S   S U B R O U T I N E
        //**********************************************************************
         BEGSR  PrepareFiles;
        // S E T   U P   T H E   T E M P O R A R Y   R E S U L T  S T R U C T U

         EXEC SQL
             DECLARE ORDERSCURSOR CURSOR
             FOR
             SELECT TRIM(C.FIRST_NAME) || ' ' || C.LAST_NAME AS CUSTNAME,
                    A.ORDER_NUMBER, A.ORDER_DATE,
                    B.PART_NUMBER, B.NUMBER_ORDERED,
                    B.QUOTED_PRICE,
                    B.QUOTED_PRICE * B.NUMBER_ORDERED
             FROM   BCI433LIB/ORDER1 A,
                    BCI433LIB/ORDERLINE B,
                    BCI433LIB/CUSTOMER2 C
             WHERE  C.CUSTOMER_NUMBER = A.CUSTOMER_NUMBER AND
                    A.ORDER_NUMBER = B.ORDER_NUMBER AND
                    B.NUMBER_ORDERED * B.QUOTED_PRICE > :SPENDLIMIT
             FOR READ ONLY;


        // A   T E M P O R A R Y   R E S U L T   T A B L E   I S   C R E A T E D
        EXEC SQL
              OPEN ORDERSCURSOR;
              IF SQLCODE <> 0 OR SQLWN0 = 'W';
                ENDOFFILE = *ON;
              ENDIF;

        ENDSR;
        //**********************************************************************
        //   G E T     R O W    S U B R O U T I N E
        //**********************************************************************
        BEGSR     GETROW;

        EXEC SQL
          FETCH NEXT
          FROM ORDERSCURSOR
          INTO :ORDERSRECORD;


        IF SQLCODE <> 0 OR SQLWN0 = 'W';
                ENDOFFILE = *ON;
        ENDIF;

         ENDSR;
        //**********************************************************************
        // W R A P U P     S U B R O U T I N E
        //**********************************************************************
          BEGSR WRAPUP;
          EXEC SQL
              CLOSE ORDERSCURSOR;

          IF SQLCODE <> 0 OR SQLWN0 = 'W';
                DSPLY 'Cursor not closed';
          ENDIF;


          EXEC SQL
            SELECT COUNT(*)
            INTO :UNDERLIMIT
            FROM   BCI433LIB/ORDER1 A,
                   BCI433LIB/ORDERLINE B,
                   BCI433LIB/CUSTOMER2 C
            WHERE  C.CUSTOMER_NUMBER = A.CUSTOMER_NUMBER AND
                    A.ORDER_NUMBER = B.ORDER_NUMBER AND
                    B.NUMBER_ORDERED * B.QUOTED_PRICE < :SPENDLIMIT;


          IF SQLCODE <> 0 OR SQLWN0 = 'W';
                DSPLY 'UNDERLIMIT DID NOT GET A GOOD VALUE';
          ENDIF;
          ENDSR;
